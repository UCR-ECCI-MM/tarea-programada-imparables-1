
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARROW AUDIO BEGIN_BACKUP BEGIN_BACKUP_UPDATE BEGIN_BOOT_SEQUENCE BEGIN_CRASH_REPORT BEGIN_DIAGNOSTIC CHECK COLON COMMA COMMENT DATE DESTINATION DETAILS END_BACKUP END_BACKUP_UPDATE END_BOOT_SEQUENCE END_CRASH_REPORT END_DIAGNOSTIC ENTRY_NUMBER FAIL FILE_LIST FUNCTION IDENTIFIER LATENCY LBRACE LBRACKET LIINE LOGLEVEL MESSAGE MINUS NETWORK NUMBER PASS PROGRESS RBRACE RBRACKET RESULT SEMICOLON SOURCE STACK_TRACE STEP STORAGE STRING TIME TIMESTAMP VIDEOlog : entriesentries : entries entryentries : entryentry : LBRACKET TIMESTAMP RBRACKET LOGLEVEL ENTRY_NUMBER MESSAGE entry_optionalentry_optional : blocks\n| emptyblocks : blocks blockblocks : blockblock : BEGIN_DIAGNOSTIC diagnostic_list END_DIAGNOSTICblock : BEGIN_BOOT_SEQUENCE boot_steps END_BOOT_SEQUENCEblock : BEGIN_CRASH_REPORT crash_contents END_CRASH_REPORTblock : BEGIN_BACKUP backup_contents END_BACKUPdiagnostic_list : diagnostic_list diagnostic_entrydiagnostic_list : diagnostic_entrydiagnostic_entry : CHECK STRING ARROW LBRACE diagnostic_fields RBRACE SEMICOLONdiagnostic_fields : diagnostic_fields COMMA diagnostic_field\n| diagnostic_fielddiagnostic_field : RESULT STRING\n| LATENCY STRINGboot_steps : boot_steps boot_stepboot_steps : boot_stepboot_step : STEP STRING SEMICOLONcrash_contents : crash_field_listcrash_field_list : crash_field_list crash_fieldcrash_field_list : crash_fieldcrash_field : IDENTIFIER COLON NUMBER SEMICOLONcrash_field : IDENTIFIER COLON STRING SEMICOLONcrash_field : STACK_TRACE COLON LBRACKET stack_trace_entries RBRACKET SEMICOLONstack_trace_entries : stack_trace_entries COMMA stack_trace_entrystack_trace_entries : stack_trace_entrystack_trace_entry : LBRACE function_field COMMA line_field RBRACEfunction_field : FUNCTION COLON STRINGline_field : LIINE COLON NUMBERbackup_contents : backup_field_listbackup_field_list : backup_field_list backup_fieldbackup_field_list : backup_fieldbackup_field : SOURCE STRING SEMICOLONbackup_field : DESTINATION COLON STRING SEMICOLONbackup_field : FILE_LIST COLON LBRACKET file_list_entries RBRACKET SEMICOLONfile_list_entries : file_list_entries COMMA STRINGfile_list_entries : STRINGbackup_field : BEGIN_BACKUP_UPDATE backup_update_contents END_BACKUP_UPDATEbackup_update_contents : backup_update_field_listbackup_update_field_list : backup_update_field_list backup_update_fieldbackup_update_field_list : backup_update_fieldbackup_update_field : TIMESTAMP COLON STRING SEMICOLONbackup_update_field : PROGRESS COLON NUMBER SEMICOLONbackup_update_field : DETAILS COLON STRING SEMICOLONempty :'
    
_lr_action_items = {'LBRACKET':([0,2,3,5,10,11,12,13,14,19,38,41,44,47,48,52,],[4,4,-3,-2,-49,-4,-5,-6,-8,-7,-9,-10,-11,63,-12,66,]),'$end':([1,2,3,5,10,11,12,13,14,19,38,41,44,48,],[0,-1,-3,-2,-49,-4,-5,-6,-8,-7,-9,-10,-11,-12,]),'TIMESTAMP':([4,37,54,55,68,94,95,96,],[6,56,56,-45,-44,-46,-47,-48,]),'RBRACKET':([6,75,76,79,80,102,106,112,],[7,88,-30,92,-41,-29,-40,-31,]),'LOGLEVEL':([7,],[8,]),'ENTRY_NUMBER':([8,],[9,]),'MESSAGE':([9,],[10,]),'BEGIN_DIAGNOSTIC':([10,12,14,19,38,41,44,48,],[15,15,-8,-7,-9,-10,-11,-12,]),'BEGIN_BOOT_SEQUENCE':([10,12,14,19,38,41,44,48,],[16,16,-8,-7,-9,-10,-11,-12,]),'BEGIN_CRASH_REPORT':([10,12,14,19,38,41,44,48,],[17,17,-8,-7,-9,-10,-11,-12,]),'BEGIN_BACKUP':([10,12,14,19,38,41,44,48,],[18,18,-8,-7,-9,-10,-11,-12,]),'CHECK':([15,20,21,39,107,],[22,22,-14,-13,-15,]),'STEP':([16,23,24,42,60,],[25,25,-21,-20,-22,]),'IDENTIFIER':([17,27,28,45,73,74,101,],[29,29,-25,-24,-26,-27,-28,]),'STACK_TRACE':([17,27,28,45,73,74,101,],[30,30,-25,-24,-26,-27,-28,]),'SOURCE':([18,32,33,49,64,67,78,105,],[34,34,-36,-35,-37,-42,-38,-39,]),'DESTINATION':([18,32,33,49,64,67,78,105,],[35,35,-36,-35,-37,-42,-38,-39,]),'FILE_LIST':([18,32,33,49,64,67,78,105,],[36,36,-36,-35,-37,-42,-38,-39,]),'BEGIN_BACKUP_UPDATE':([18,32,33,49,64,67,78,105,],[37,37,-36,-35,-37,-42,-38,-39,]),'END_DIAGNOSTIC':([20,21,39,107,],[38,-14,-13,-15,]),'STRING':([22,25,34,46,51,66,69,71,86,87,93,104,],[40,43,50,62,65,80,81,83,99,100,106,111,]),'END_BOOT_SEQUENCE':([23,24,42,60,],[41,-21,-20,-22,]),'END_CRASH_REPORT':([26,27,28,45,73,74,101,],[44,-23,-25,-24,-26,-27,-28,]),'COLON':([29,30,35,36,56,57,58,91,110,],[46,47,51,52,69,70,71,104,113,]),'END_BACKUP':([31,32,33,49,64,67,78,105,],[48,-34,-36,-35,-37,-42,-38,-39,]),'PROGRESS':([37,54,55,68,94,95,96,],[57,57,-45,-44,-46,-47,-48,]),'DETAILS':([37,54,55,68,94,95,96,],[58,58,-45,-44,-46,-47,-48,]),'ARROW':([40,],[59,]),'SEMICOLON':([43,50,61,62,65,81,82,83,88,92,97,],[60,64,73,74,78,94,95,96,101,105,107,]),'NUMBER':([46,70,113,],[61,82,114,]),'END_BACKUP_UPDATE':([53,54,55,68,94,95,96,],[67,-43,-45,-44,-46,-47,-48,]),'LBRACE':([59,63,89,],[72,77,77,]),'RESULT':([72,98,],[86,86,]),'LATENCY':([72,98,],[87,87,]),'COMMA':([75,76,79,80,84,85,90,99,100,102,106,108,111,112,],[89,-30,93,-41,98,-17,103,-18,-19,-29,-40,-16,-32,-31,]),'FUNCTION':([77,],[91,]),'RBRACE':([84,85,99,100,108,109,114,],[97,-17,-18,-19,-16,112,-33,]),'LIINE':([103,],[110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'log':([0,],[1,]),'entries':([0,],[2,]),'entry':([0,2,],[3,5,]),'entry_optional':([10,],[11,]),'blocks':([10,],[12,]),'empty':([10,],[13,]),'block':([10,12,],[14,19,]),'diagnostic_list':([15,],[20,]),'diagnostic_entry':([15,20,],[21,39,]),'boot_steps':([16,],[23,]),'boot_step':([16,23,],[24,42,]),'crash_contents':([17,],[26,]),'crash_field_list':([17,],[27,]),'crash_field':([17,27,],[28,45,]),'backup_contents':([18,],[31,]),'backup_field_list':([18,],[32,]),'backup_field':([18,32,],[33,49,]),'backup_update_contents':([37,],[53,]),'backup_update_field_list':([37,],[54,]),'backup_update_field':([37,54,],[55,68,]),'stack_trace_entries':([63,],[75,]),'stack_trace_entry':([63,89,],[76,102,]),'file_list_entries':([66,],[79,]),'diagnostic_fields':([72,],[84,]),'diagnostic_field':([72,98,],[85,108,]),'function_field':([77,],[90,]),'line_field':([103,],[109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> log","S'",1,None,None,None),
  ('log -> entries','log',1,'p_log','parser.py',17),
  ('entries -> entries entry','entries',2,'p_entries_multiple','parser.py',21),
  ('entries -> entry','entries',1,'p_entries_single','parser.py',25),
  ('entry -> LBRACKET TIMESTAMP RBRACKET LOGLEVEL ENTRY_NUMBER MESSAGE entry_optional','entry',7,'p_entry','parser.py',30),
  ('entry_optional -> blocks','entry_optional',1,'p_entry_optional','parser.py',40),
  ('entry_optional -> empty','entry_optional',1,'p_entry_optional','parser.py',41),
  ('blocks -> blocks block','blocks',2,'p_blocks_multiple','parser.py',46),
  ('blocks -> block','blocks',1,'p_blocks_single','parser.py',50),
  ('block -> BEGIN_DIAGNOSTIC diagnostic_list END_DIAGNOSTIC','block',3,'p_block_diagnostic','parser.py',55),
  ('block -> BEGIN_BOOT_SEQUENCE boot_steps END_BOOT_SEQUENCE','block',3,'p_block_boot','parser.py',59),
  ('block -> BEGIN_CRASH_REPORT crash_contents END_CRASH_REPORT','block',3,'p_block_crash','parser.py',63),
  ('block -> BEGIN_BACKUP backup_contents END_BACKUP','block',3,'p_block_backup','parser.py',67),
  ('diagnostic_list -> diagnostic_list diagnostic_entry','diagnostic_list',2,'p_diagnostic_list_multiple','parser.py',72),
  ('diagnostic_list -> diagnostic_entry','diagnostic_list',1,'p_diagnostic_list_single','parser.py',76),
  ('diagnostic_entry -> CHECK STRING ARROW LBRACE diagnostic_fields RBRACE SEMICOLON','diagnostic_entry',7,'p_diagnostic_entry','parser.py',80),
  ('diagnostic_fields -> diagnostic_fields COMMA diagnostic_field','diagnostic_fields',3,'p_diagnostic_fields','parser.py',85),
  ('diagnostic_fields -> diagnostic_field','diagnostic_fields',1,'p_diagnostic_fields','parser.py',86),
  ('diagnostic_field -> RESULT STRING','diagnostic_field',2,'p_diagnostic_field','parser.py',93),
  ('diagnostic_field -> LATENCY STRING','diagnostic_field',2,'p_diagnostic_field','parser.py',94),
  ('boot_steps -> boot_steps boot_step','boot_steps',2,'p_boot_steps_multiple','parser.py',101),
  ('boot_steps -> boot_step','boot_steps',1,'p_boot_steps_single','parser.py',105),
  ('boot_step -> STEP STRING SEMICOLON','boot_step',3,'p_boot_step','parser.py',109),
  ('crash_contents -> crash_field_list','crash_contents',1,'p_crash_contents','parser.py',114),
  ('crash_field_list -> crash_field_list crash_field','crash_field_list',2,'p_crash_field_list_multiple','parser.py',118),
  ('crash_field_list -> crash_field','crash_field_list',1,'p_crash_field_list_single','parser.py',122),
  ('crash_field -> IDENTIFIER COLON NUMBER SEMICOLON','crash_field',4,'p_crash_field_error_code','parser.py',126),
  ('crash_field -> IDENTIFIER COLON STRING SEMICOLON','crash_field',4,'p_crash_field_message','parser.py',131),
  ('crash_field -> STACK_TRACE COLON LBRACKET stack_trace_entries RBRACKET SEMICOLON','crash_field',6,'p_crash_field_stack_trace','parser.py',136),
  ('stack_trace_entries -> stack_trace_entries COMMA stack_trace_entry','stack_trace_entries',3,'p_stack_trace_entries_multiple','parser.py',140),
  ('stack_trace_entries -> stack_trace_entry','stack_trace_entries',1,'p_stack_trace_entries_single','parser.py',144),
  ('stack_trace_entry -> LBRACE function_field COMMA line_field RBRACE','stack_trace_entry',5,'p_stack_trace_entry','parser.py',148),
  ('function_field -> FUNCTION COLON STRING','function_field',3,'p_function_field','parser.py',152),
  ('line_field -> LIINE COLON NUMBER','line_field',3,'p_line_field','parser.py',156),
  ('backup_contents -> backup_field_list','backup_contents',1,'p_backup_contents','parser.py',161),
  ('backup_field_list -> backup_field_list backup_field','backup_field_list',2,'p_backup_field_list_multiple','parser.py',166),
  ('backup_field_list -> backup_field','backup_field_list',1,'p_backup_field_list_single','parser.py',170),
  ('backup_field -> SOURCE STRING SEMICOLON','backup_field',3,'p_backup_field_source','parser.py',174),
  ('backup_field -> DESTINATION COLON STRING SEMICOLON','backup_field',4,'p_backup_field_destination','parser.py',178),
  ('backup_field -> FILE_LIST COLON LBRACKET file_list_entries RBRACKET SEMICOLON','backup_field',6,'p_backup_field_file_list','parser.py',182),
  ('file_list_entries -> file_list_entries COMMA STRING','file_list_entries',3,'p_file_list_entries_multiple','parser.py',186),
  ('file_list_entries -> STRING','file_list_entries',1,'p_file_list_entries_single','parser.py',190),
  ('backup_field -> BEGIN_BACKUP_UPDATE backup_update_contents END_BACKUP_UPDATE','backup_field',3,'p_backup_field_backup_update','parser.py',194),
  ('backup_update_contents -> backup_update_field_list','backup_update_contents',1,'p_backup_update_contents','parser.py',198),
  ('backup_update_field_list -> backup_update_field_list backup_update_field','backup_update_field_list',2,'p_backup_update_field_list_multiple','parser.py',202),
  ('backup_update_field_list -> backup_update_field','backup_update_field_list',1,'p_backup_update_field_list_single','parser.py',206),
  ('backup_update_field -> TIMESTAMP COLON STRING SEMICOLON','backup_update_field',4,'p_backup_update_field_timestamp','parser.py',210),
  ('backup_update_field -> PROGRESS COLON NUMBER SEMICOLON','backup_update_field',4,'p_backup_update_field_progress','parser.py',214),
  ('backup_update_field -> DETAILS COLON STRING SEMICOLON','backup_update_field',4,'p_backup_update_field_details','parser.py',218),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',223),
]
